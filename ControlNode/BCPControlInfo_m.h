//
// Generated file, do not edit! Created by nedtool 4.6 from CoreNode/BCPControlInfo.msg.
//

#ifndef _BCPCONTROLINFO_M_H_
#define _BCPCONTROLINFO_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>CoreNode/BCPControlInfo.msg:19</tt> by nedtool.
 * <pre>
 * // Objeto de información e control incluido en BurstControlPacket cuando es convertido al dominio eléctrico.
 * class BCPControlInfo
 * {
 *     int port = -1; // fibra de entrada y de salida del BCP.
 *     simtime_t BCPArrival = -1; // tiempo de llegada del BCPini.
 * }
 * </pre>
 */
class BCPControlInfo : public ::cObject
{
  protected:
    int port_var;
    simtime_t BCPArrival_var;

  private:
    void copy(const BCPControlInfo& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BCPControlInfo&);

  public:
    BCPControlInfo();
    BCPControlInfo(const BCPControlInfo& other);
    virtual ~BCPControlInfo();
    BCPControlInfo& operator=(const BCPControlInfo& other);
    virtual BCPControlInfo *dup() const {return new BCPControlInfo(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getPort() const;
    virtual void setPort(int port);
    virtual simtime_t getBCPArrival() const;
    virtual void setBCPArrival(simtime_t BCPArrival);
};

inline void doPacking(cCommBuffer *b, BCPControlInfo& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BCPControlInfo& obj) {obj.parsimUnpack(b);}


#endif // ifndef _BCPCONTROLINFO_M_H_

