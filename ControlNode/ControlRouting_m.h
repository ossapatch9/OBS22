//
// Generated file, do not edit! Created by nedtool 4.6 from CoreNode/CoreRouting.msg.
//

#ifndef _COREROUTING_M_H_
#define _COREROUTING_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>CoreNode/CoreRouting.msg:25</tt> by nedtool.
 * <pre>
 * class CoreRouting
 * {
 *     int outPort = -1;
 *     int outLabel = -1;
 *     int outColor = -1;
 * 
 * }
 * </pre>
 */
class CoreRouting : public ::cObject
{
  protected:
    int outPort_var;
    int outLabel_var;
    int outColor_var;

  private:
    void copy(const CoreRouting& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CoreRouting&);

  public:
    CoreRouting();
    CoreRouting(const CoreRouting& other);
    virtual ~CoreRouting();
    CoreRouting& operator=(const CoreRouting& other);
    virtual CoreRouting *dup() const {return new CoreRouting(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getOutPort() const;
    virtual void setOutPort(int outPort);
    virtual int getOutLabel() const;
    virtual void setOutLabel(int outLabel);
    virtual int getOutColor() const;
    virtual void setOutColor(int outColor);
};

inline void doPacking(cCommBuffer *b, CoreRouting& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, CoreRouting& obj) {obj.parsimUnpack(b);}


#endif // ifndef _COREROUTING_M_H_

